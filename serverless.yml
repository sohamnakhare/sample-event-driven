# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: sohamnakhare
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: sample-event-driven-1
# "service" is the name of this project. This will also be added to your AWS resource names.
service: sample-event-driven-1

plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  deploymentMethod: changesets
  runtime: nodejs20.x
  environment:
    LOG_LEVEL: debug
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource: "*"

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: "*"
      - sqs:
          arn:
            Fn::GetAtt:
              - MyQueue
              - Arn
    environment:
      SQS_URL:
        Ref: MyQueue
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  consumer:
    handler: consumer.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - MyQueue
              - Arn
          batchSize: 10
    environment:
      SQS_URL:
        Ref: MyQueue

resources:
  Resources:
    MyS3Bucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: sample-event-driven-bucket-1
    MyQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: sample-event-driven-1.fifo
        FifoQueue: true
        VisibilityTimeout: 540
        ContentBasedDeduplication: true
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - MyDeadLetterQueue
              - Arn
          maxReceiveCount: 5
    MyDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sample-event-driven-dlq-1.fifo
        FifoQueue: true
        ContentBasedDeduplication: true